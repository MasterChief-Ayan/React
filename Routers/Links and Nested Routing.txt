2: Links and Nested Routing


(i)
Going to new address via button or link (WITHOUT RELOADING):

NOTE: 

Dont use Anchor TAG as it refreshes the entire WEB pages which we dont want

EG:

in HOME done use 

<a href="/products"> Products </a>    .....Used inside the return JSX part of the HOME


LINK COMPONENT 

'''import {Link} from "react-router-dom";'''

use this->
	<Link to="/products">Products</Link>


MISTAKE: NOT to be used in the App.js but in the required Page


TRICK:

Replace:
a    -> Link
href -> to


(ii)
Nested Routing

BEST USE CASE IS NAVBAR (for using children components)

NOTE:  

children at the children path will print their resp component in the order where the Outlet tag is there in the code of the parent


EG:

Root->{Home,Product}

i.e.

const router = createrBrowserRouter([
{
path:"/",
element: <Root/>,
children:[{path:"/home",element:"<Home/>} , {path:"/product",element:"<Products/>}]
}
]);


//NOTE: You can also define again a path == "/" in the child Component (SUPER WEIRD)

### Now we need to maintain the childs to also get printed in the same root WITHOUT reloading


thus use ---> Outlet Component
'''import {Outlet} from "react-router-dom";''' 

i.e.
in the PARENT (root) 


return (<>

<div> NON SENSE </div>
<Outlet/>              <------------------------  here the child component will get printed  DEPENDING UPON THE PATH


</>)























